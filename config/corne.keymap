/*
* Copyright (c) 2020 The ZMK Contributors
*

* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include "keymap_french.h"

// Home row mods macro
#define HRML(k2,k3,k4) &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3
#define WHRML(k2,k3,k4) &ht LALT k2  &ht LGUI k3  &ht LCTRL k4
#define WHRMR(k1,k2,k3) &ht RCTRL k1  &ht RGUI k2  &ht RALT k3

// Layers
#define DEFAULT 0
#define RIGHT 1
#define LEFT 2
#define TRI 3

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LEFT RIGHT>;
            then-layer = <TRI>;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  A  |  Z  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |      |
            // |      |  Q  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  M  |      |
            // |      |  W  |  X  |  C  |  V  |  B  |   |  N  |  ,   |  ;  |  :  |  '  |      |
            //                    | ESC | LEFT SPACE | TAB |   | ENT | RIGHT BSPC  | SHIFT |

            bindings = <
&none &kp FR_A  &kp FR_Z  &kp E     &kp R  &kp T        &kp Y    &kp U      &kp I       &kp O         &kp P     &none
&none &kp FR_Q  &kp S     &kp D     &kp F  &kp G        &kp H    &kp J      &kp K       &kp L         &kp FR_M     &none
&none &kp FR_W  &kp X     &kp C     &kp V  &kp B        &kp N    &kp FR_COMM  &kp FR_SCLN  &kp FR_COLN  &kp FR_QUOT  &none
                      &kp ESC  &lt LEFT SPACE &kp TAB     &kp RET  &lt RIGHT BACKSPACE &kp RSHIFT
            >;
        };

        right_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  1  |  2  |  3  |  4  |  5  |   |     |  7  |  8  |  9  |  0  |      |
            // |      | BT1 | BT2 | BT3 | BT4 | BT5 |   |     |  4  |  5  |  6  |     |      |
            // |      |     |     |     |     |     |   |     |  1  |  2  |  3  |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &none &kp N7    &kp N8    &kp N9    &kp N0 &none 
&none &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none &kp N4    &kp N5    &kp N6    &none  &none  
&none &trans        &trans        &trans        &trans        &trans          &none &kp N1    &kp N2    &kp N3    &none  &none
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        left_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      |
            // |      |     |     |     |     |     |   |  LEFT  |  DOWN     |  UP     |  RIGHT  |    |      |
            // |      |     |     |     |     |     |   |  HOME  |  PG DOWN  |  PG UP  |  END    |    |      |
            //                    | GUI |  x   | SPC |   | ENT |  x   | ALT |

            bindings = <
&none &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &none
&none &trans    &trans  &trans    &trans    &trans       &kp LARW  &kp DARW  &kp UARW         &kp RARW  &trans &none
&none &trans    &trans  &trans    &trans    &trans       &kp HOME  &kp PD_DN   &kp PG_UP         &kp END  &trans &none
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
        
        tri_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
